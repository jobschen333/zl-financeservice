<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.meizhuliu.zl.finance.mapper.AccountRecordAllDOMapper">
  <resultMap id="BaseResultMap" type="com.meizhuliu.zl.finance.domian.AccountRecordAllDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="bill_m" jdbcType="DECIMAL" property="billM" />
    <result column="account_m" jdbcType="DECIMAL" property="accountM" />
    <result column="bill_gify" jdbcType="DECIMAL" property="billGify" />
    <result column="gift_amount" jdbcType="DECIMAL" property="giftAmount" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, bill_m, account_m, bill_gify, gift_amount, date, status, update_at, created_at
  </sql>
  <select id="selectByExample" parameterType="com.meizhuliu.zl.finance.domian.AccountRecordAllDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account_record_all
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from account_record_all
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account_record_all
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from account_record_all
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from account_record_all
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.meizhuliu.zl.finance.domian.AccountRecordAllDOExample">
    delete from account_record_all
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.meizhuliu.zl.finance.domian.AccountRecordAllDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into account_record_all (bill_m, account_m, bill_gify, 
      gift_amount, date, status, 
      update_at, created_at)
    values (#{billM,jdbcType=DECIMAL}, #{accountM,jdbcType=DECIMAL}, #{billGify,jdbcType=DECIMAL}, 
      #{giftAmount,jdbcType=DECIMAL}, #{date,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{updateAt,jdbcType=TIMESTAMP}, #{createdAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.meizhuliu.zl.finance.domian.AccountRecordAllDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into account_record_all
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="billM != null">
        bill_m,
      </if>
      <if test="accountM != null">
        account_m,
      </if>
      <if test="billGify != null">
        bill_gify,
      </if>
      <if test="giftAmount != null">
        gift_amount,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="billM != null">
        #{billM,jdbcType=DECIMAL},
      </if>
      <if test="accountM != null">
        #{accountM,jdbcType=DECIMAL},
      </if>
      <if test="billGify != null">
        #{billGify,jdbcType=DECIMAL},
      </if>
      <if test="giftAmount != null">
        #{giftAmount,jdbcType=DECIMAL},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.meizhuliu.zl.finance.domian.AccountRecordAllDOExample" resultType="java.lang.Long">
    select count(*) from account_record_all
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update account_record_all
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.billM != null">
        bill_m = #{record.billM,jdbcType=DECIMAL},
      </if>
      <if test="record.accountM != null">
        account_m = #{record.accountM,jdbcType=DECIMAL},
      </if>
      <if test="record.billGify != null">
        bill_gify = #{record.billGify,jdbcType=DECIMAL},
      </if>
      <if test="record.giftAmount != null">
        gift_amount = #{record.giftAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.updateAt != null">
        update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update account_record_all
    set id = #{record.id,jdbcType=BIGINT},
      bill_m = #{record.billM,jdbcType=DECIMAL},
      account_m = #{record.accountM,jdbcType=DECIMAL},
      bill_gify = #{record.billGify,jdbcType=DECIMAL},
      gift_amount = #{record.giftAmount,jdbcType=DECIMAL},
      date = #{record.date,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.meizhuliu.zl.finance.domian.AccountRecordAllDO">
    update account_record_all
    <set>
      <if test="billM != null">
        bill_m = #{billM,jdbcType=DECIMAL},
      </if>
      <if test="accountM != null">
        account_m = #{accountM,jdbcType=DECIMAL},
      </if>
      <if test="billGify != null">
        bill_gify = #{billGify,jdbcType=DECIMAL},
      </if>
      <if test="giftAmount != null">
        gift_amount = #{giftAmount,jdbcType=DECIMAL},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.meizhuliu.zl.finance.domian.AccountRecordAllDO">
    update account_record_all
    set bill_m = #{billM,jdbcType=DECIMAL},
      account_m = #{accountM,jdbcType=DECIMAL},
      bill_gify = #{billGify,jdbcType=DECIMAL},
      gift_amount = #{giftAmount,jdbcType=DECIMAL},
      date = #{date,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.meizhuliu.zl.finance.domian.AccountRecordAllDOExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from account_record_all
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from account_record_all
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
</mapper>